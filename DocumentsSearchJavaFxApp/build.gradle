apply plugin: "kotlin"


sourceCompatibility = 1.8

compileKotlin.kotlinOptions.jvmTarget = "1.8"

compileTestKotlin.kotlinOptions.jvmTarget = "1.8"


/*      versions        */
ext.javaFxUtilsVersion = "1.0.6"

ext.rxJavaVersion = "2.2.19"

ext.logbackVersion = "1.2.3"


dependencies {
    implementation project(":DocumentsSearchCommon")
    implementation project(":LuceneDocumentsIndexerAndSearcher")
    implementation project(":FileContentExtractor")

    implementation "net.dankito.utils:file-system-watcher-java8:1.0.0-SNAPSHOT"

    implementation("net.dankito.utils:java-fx-utils:$javaFxUtilsVersion") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk8"
    }

    implementation("io.reactivex.rxjava2:rxjava:$rxJavaVersion")

    implementation("ch.qos.logback:logback-classic:$logbackVersion")
}


def mainClassName = "net.dankito.documents.search.ui.DocumentsSearchJavaFXApplication"

jar {
    zip64 = true

    // If one of the source JARs is signed, merging it into one fat jar destroys the signature -> remove signatures
    // (but may runs into problems with jars that require a valid signature like BouncyCastle, see
    // https://stackoverflow.com/questions/51455197/gradle-fatjar-could-not-find-or-load-main-class)
    exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA")

    manifest {
        attributes  "Main-Class": mainClassName,
                "Implementation-Title": "Documents Search",
                "Implementation-Version": rootProject.version
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
